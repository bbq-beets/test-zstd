# This is a basic workflow to help you get started with Actions

name: Windows cache test

# Controls when the workflow will run
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  windows_other:
    runs-on: windows-latest

    steps:
    - name: Create multiple files
      run: |
        $ErrorActionPreference = 'SilentlyContinue'
        echo "Create random files"
        mkdir windows_tmp
        mkdir cache
        git clone https://github.com/telescopejs/telescope.git
        #for($i = 1 ; $i -le 2000 ; $i++) { dd if=/dev/urandom bs=1048576 count=1 of=cache/file$i }
        
    - uses: actions/setup-node@v3
      with:
        node-version: 12.x
        
    - run: |
        cd telescope
        npm install
        du -sh node_modules
        cp -r node_modules/ ../cache/tmp1/
        #cp -r node_modules/ ../cache/tmp2/
        #cp -r node_modules/ ../cache/tmp3/
        #cp -r node_modules/ ../cache/tmp4/
        du -sh ../cache
        
    - name: Test with 7z tar only
      run: |
        $ErrorActionPreference = 'SilentlyContinue'
        #zstd -V
        #7z --version
        echo "Running tar standalone compression then decompression"
        #(Measure-Command { 7z a file.tar cache | Out-Default }).ToString()
        #ls file.tar
        #(Measure-Command { tar -xf file.tar -C windows_tmp | Out-Default }).ToString()
        #rm file.tar
        rm -r windows_tmp/*
    
    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
    
    - name: Test with tar then zstd
      run: |
        tar --version
        which tar
        zstd -V
        echo "Running tar + zstd in two steps compression then decompression"
        ls
        tar --use-compress-program "zstd -T0 -1" -cf cache.tzst --exclude cache.tzst -P -C windows_tmp cache --force-local
        #(Measure-Command { tar -cf file_combined.tar cache && zstd -o file_combined_2.tzst file_combined.tar | Out-Default }).ToString()
        #(Measure-Command { zstd -o file_combined.tzst file_combined.tar | Out-Default }).ToString()
        #rm file_combined.tar
        ls
        #(Measure-Command { zstd -d -o file_combined.tar file_combined_2.tzst && tar -tf file_combined.tar -P | Out-Default }).ToString()
        tar --use-compress-program "zstd -d" -xf cache.tzst -P -C windows_tmp --force-local
        #(Measure-Command { tar -a -xf file_combined.tzst -P -C windows_tmp | Out-Default }).ToString()
        #rm file_combined.tzst
        ls windows_tmp/
        rm cache.tzst
        rm -r windows_tmp/*
